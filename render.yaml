services:
  - type: web
    name: newsai
    runtime: python
    buildCommand: pip install -r requirements.txt
    startCommand: python app.py
    disk:
      name: newsai-data
      mountPath: /data
      sizeGB: 1
    envVars:
      - key: CRON_AUTH_TOKEN
        generateValue: true
      - key: PORT
        value: 10000
      - key: DATA_DIR
        value: /data
    autoDeploy: false

  - type: cron
    name: newsai-daily-news
    runtime: python
    schedule: "0 6 * * *"  # Daily at 6 AM UTC
    buildCommand: pip install -r requirements.txt
    startCommand: |
      python -c "
      import os
      import requests
      
      app_url = os.environ.get('RENDER_EXTERNAL_URL', 'https://newsai.onrender.com')
      token = os.environ.get('CRON_AUTH_TOKEN')
      
      response = requests.post(
          f'{app_url}/api/trigger/daily-news',
          headers={'X-Auth-Token': token}
      )
      
      print(f'Daily news trigger: {response.status_code}')
      print(response.json())
      "
    envVars:
      - fromService:
          type: web
          name: newsai
          envVarKey: CRON_AUTH_TOKEN

  - type: cron
    name: newsai-weekly-stocks
    runtime: python
    schedule: "0 6 * * 1"  # Every Monday at 6 AM UTC
    buildCommand: pip install -r requirements.txt
    startCommand: |
      python -c "
      import os
      import requests
      
      app_url = os.environ.get('RENDER_EXTERNAL_URL', 'https://newsai.onrender.com')
      token = os.environ.get('CRON_AUTH_TOKEN')
      
      response = requests.post(
          f'{app_url}/api/trigger/weekly-stocks',
          headers={'X-Auth-Token': token}
      )
      
      print(f'Weekly stocks trigger: {response.status_code}')
      print(response.json())
      "
    envVars:
      - fromService:
          type: web
          name: newsai
          envVarKey: CRON_AUTH_TOKEN